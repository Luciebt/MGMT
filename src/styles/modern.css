/* Modern Ableton Project Manager Styles - Optimized */

:root {
  /* Color Palette */
  --peach: #f7c59f;
  --space-cadet: #2a324b;
  --slate-gray: #767b91;
  --french-gray: #c7ccdb;
  --alice-blue: #e1e5ee;

  /* Semantic Colors */
  --primary-color: var(--space-cadet);
  --primary-hover: #1e2436;
  --primary-dark: #1e2436;
  --secondary-color: var(--slate-gray);
  --secondary-hover: #5a6080;
  --accent-color: var(--peach);
  --accent-hover: #f5b380;
  --danger-color: #d63447;
  --danger-hover: #b21e2c;

  /* Backgrounds */
  --bg-primary: #ffffff;
  --bg-secondary: var(--alice-blue);
  --bg-tertiary: var(--french-gray);

  /* Text */
  --text-primary: var(--space-cadet);
  --text-secondary: var(--slate-gray);
  --text-muted: var(--slate-gray);

  /* Layout */
  --border-color: var(--french-gray);
  --border-radius: 0.375rem;
  --box-shadow: 0 0.125rem 0.25rem rgba(42, 50, 75, 0.075);
  --box-shadow-lg: 0 0.5rem 1rem rgba(42, 50, 75, 0.15);

  /* Typography */
  --font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto,
    sans-serif;
  --font-size-xs: 0.75rem;
  --font-size-sm: 0.875rem;
  --font-size-base: 1rem;
  --font-size-lg: 1.125rem;
  --font-size-xl: 1.25rem;

  /* Spacing */
  --spacing-xs: 0.25rem;
  --spacing-sm: 0.5rem;
  --spacing-md: 1rem;
  --spacing-lg: 1.5rem;
  --spacing-xl: 2rem;

  /* Transitions */
  --transition-fast: 0.15s ease-out;
  --transition-base: 0.2s ease-in-out;
  --transition-slow: 0.3s ease-in-out;
}

/* Global Styles */
*,
*::before,
*::after {
  box-sizing: border-box;
}

body {
  font-family: var(--font-family);
  font-size: var(--font-size-base);
  color: var(--text-primary);
  background-color: var(--bg-primary);
  line-height: 1.5;
  margin: 0;
  padding: 0;
  overflow-x: hidden;
}

#root {
  width: 100%;
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  align-items: center;
}

/* Layout */
.app-container {
  max-width: 1400px;
  margin: 0 auto;
  padding: var(--spacing-xl);
  width: 100%;
}

.app-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: var(--spacing-xl);
  padding-bottom: var(--spacing-lg);
  border-bottom: 2px solid var(--border-color);
}

.app-title {
  font-size: var(--font-size-xl);
  font-weight: 600;
  color: var(--accent-color);
  margin: 0;
  text-shadow: 1px 1px 2px rgba(42, 50, 75, 0.1);
}

.header-actions {
  display: flex;
  gap: var(--spacing-sm);
}

/* Buttons */
.btn {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: var(--spacing-xs);
  padding: var(--spacing-sm) var(--spacing-md);
  font-size: var(--font-size-base);
  font-weight: 500;
  text-decoration: none;
  border: 1px solid transparent;
  border-radius: var(--border-radius);
  cursor: pointer;
  transition: all var(--transition-base);
  min-width: auto;
}

.btn:focus {
  outline: 2px solid var(--primary-color);
  outline-offset: 2px;
}

.btn:disabled {
  opacity: 0.6;
  cursor: not-allowed;
}

.btn-primary {
  background-color: var(--primary-color);
  border-color: var(--primary-color);
  color: white;
}

.btn-primary:hover:not(:disabled) {
  background-color: var(--primary-hover);
  border-color: var(--primary-hover);
}

.btn-secondary {
  background-color: var(--secondary-color);
  border-color: var(--secondary-color);
  color: white;
}

.btn-secondary:hover:not(:disabled) {
  background-color: var(--secondary-hover);
  border-color: var(--secondary-hover);
}

.btn-outline {
  background-color: transparent;
  border-color: var(--border-color);
  color: var(--text-primary);
}

.btn-outline:hover:not(:disabled) {
  background-color: var(--bg-secondary);
}

.btn-success {
  background-color: var(--accent-color);
  border-color: var(--accent-color);
  color: var(--space-cadet);
  font-weight: 600;
}

.btn-success:hover:not(:disabled) {
  background-color: var(--accent-hover);
  border-color: var(--accent-hover);
}

.btn-sm {
  padding: var(--spacing-xs) var(--spacing-sm);
  font-size: var(--font-size-sm);
}

/* Compact Add Tag Button */
.tag-add-group .btn {
  min-width: 32px;
  padding: var(--spacing-xs);
  font-weight: 600;
  font-size: var(--font-size-base);
  border-radius: var(--border-radius);
  cursor: pointer;
  background-color: var(--accent-color);
  border-color: var(--accent-color);
  color: var(--space-cadet);
  transition: all var(--transition-base);
}

.tag-add-group .btn:hover:not(:disabled) {
  background-color: var(--accent-hover);
  border-color: var(--accent-hover);
  transform: scale(1.05);
}

.tag-add-group .btn:disabled {
  opacity: 0.4;
  cursor: not-allowed !important;
  background-color: var(--border-color);
  border-color: var(--border-color);
  color: var(--text-muted);
  transform: none;
  pointer-events: none;
}

/* Loading state for add tag button */
.tag-add-group .btn.loading {
  animation: pulse 1.5s ease-in-out infinite;
}

@keyframes pulse {
  0% {
    opacity: 1;
  }
  50% {
    opacity: 0.6;
  }
  100% {
    opacity: 1;
  }
}

/* Forms and Inputs */
.form-group {
  margin-bottom: var(--spacing-md);
}

.form-label {
  display: block;
  margin-bottom: var(--spacing-xs);
  font-weight: 500;
  color: var(--text-primary);
}

.form-input,
input[type="text"],
input[type="search"],
input[type="email"],
input[type="password"],
input[type="number"],
textarea {
  width: 100%;
  padding: var(--spacing-sm) var(--spacing-md);
  font-size: var(--font-size-base);
  font-family: var(--font-family);
  border: 1px solid var(--border-color);
  border-radius: var(--border-radius);
  background-color: var(--bg-primary);
  color: var(--text-primary);
  transition: border-color var(--transition-base),
    box-shadow var(--transition-base);
}

.form-input:focus,
input[type="text"]:focus,
input[type="search"]:focus,
input[type="email"]:focus,
input[type="password"]:focus,
input[type="number"]:focus,
textarea:focus {
  outline: none;
  border-color: var(--primary-color);
  box-shadow: 0 0 0 2px rgba(42, 50, 75, 0.2);
}

.form-input::placeholder,
input::placeholder,
textarea::placeholder {
  color: var(--text-muted);
}

.search-input {
  max-width: 300px;
}

/* Project Table */
.project-table-container {
  background-color: var(--bg-primary);
  border-radius: var(--border-radius);
  box-shadow: var(--box-shadow);
  overflow: hidden;
  width: 100%;
  margin: 0 auto;
}

.project-table {
  width: 100%;
  border-collapse: collapse;
  margin: 0;
  table-layout: fixed;
}

.project-table th,
.project-table td {
  padding: var(--spacing-md);
  text-align: left;
  border-bottom: 1px solid var(--border-color);
}

.project-table th {
  background-color: var(--bg-secondary);
  font-weight: 600;
  color: var(--text-primary);
  position: sticky;
  top: 0;
  z-index: 10;
}

.project-table th.sortable {
  cursor: pointer;
  user-select: none;
  transition: background-color var(--transition-base);
}

.project-table th.sortable:hover {
  background-color: var(--bg-tertiary);
}

.project-table tbody tr {
  transition: background-color var(--transition-base);
}

.project-table tbody tr:hover {
  background-color: var(--bg-secondary);
}

.project-name {
  font-weight: 500;
  max-width: 200px;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.bpm-cell,
.key-cell {
  text-align: center;
  font-family: monospace;
  font-weight: 500;
}

.creation-date-cell {
  font-family: monospace;
  font-size: var(--font-size-sm);
  white-space: nowrap;
  min-width: 140px;
}

.creation-date-cell span {
  cursor: help;
}

.tags-cell {
  min-width: 200px;
  position: relative;
}

/* Status Dropdown */
.status-cell {
  text-align: center;
  min-width: 120px;
}

.status-dropdown-container {
  position: relative;
  display: inline-flex;
  align-items: center;
  gap: var(--spacing-xs);
}

.status-dropdown {
  width: 100%;
  padding: var(--spacing-xs) var(--spacing-sm);
  border: 1px solid var(--border-color);
  border-radius: var(--border-radius);
  background-color: var(--bg-primary);
  color: var(--text-primary);
  font-size: var(--font-size-sm);
  font-weight: 500;
  cursor: pointer;
  transition: all var(--transition-base);
  appearance: none;
  background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%236b7280' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='M6 8l4 4 4-4'/%3e%3c/svg%3e");
  background-position: right var(--spacing-xs) center;
  background-repeat: no-repeat;
  background-size: 16px;
  padding-right: calc(var(--spacing-lg) + 16px);
}

.status-dropdown:focus {
  outline: none;
  border-color: var(--primary-color);
  box-shadow: 0 0 0 2px rgba(42, 50, 75, 0.1);
}

.status-dropdown:hover {
  border-color: var(--primary-color);
}

.status-dropdown:disabled {
  opacity: 0.6;
  cursor: not-allowed;
  pointer-events: none;
}

.status-loading {
  position: absolute;
  right: 6px;
  top: 50%;
  transform: translateY(-50%);
  font-size: var(--font-size-sm);
  color: var(--primary-color);
  animation: spin 1s linear infinite;
}

@keyframes spin {
  0% {
    transform: translateY(-50%) rotate(0deg);
  }
  100% {
    transform: translateY(-50%) rotate(360deg);
  }
}

/* Interactive Tag System */
.tags-container {
  display: flex;
  flex-wrap: wrap;
  gap: var(--spacing-xs);
  align-items: center;
  min-height: 32px;
  padding: var(--spacing-xs);
  border-radius: var(--border-radius);
  transition: all var(--transition-base);
  cursor: pointer;
  will-change: background-color;
}

.tags-container:hover {
  background-color: var(--bg-secondary);
}

.tags-container.editing {
  background-color: var(--bg-primary);
  border: 2px solid var(--primary-color);
  cursor: text;
}

.tag-pill {
  display: inline-flex;
  align-items: center;
  gap: var(--spacing-xs);
  padding: 2px var(--spacing-xs);
  background-color: var(--accent-color);
  color: var(--space-cadet);
  border-radius: calc(var(--border-radius) * 0.5);
  font-size: var(--font-size-xs);
  font-weight: 500;
  line-height: 1.2;
  transition: all var(--transition-base);
  cursor: pointer;
  user-select: none;
  white-space: nowrap;
  will-change: transform, background-color;
}

.tag-pill:hover {
  background-color: var(--accent-hover);
  transform: translateY(-1px);
  box-shadow: 0 2px 4px rgba(42, 50, 75, 0.1);
}

.tag-pill.editing {
  background-color: var(--primary-color);
  color: white;
}

/* Perfect circular buttons with consistent sizing */
.tag-pill-remove,
.tag-add-button {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  border-radius: 50%;
  cursor: pointer;
  transition: all var(--transition-base);
  flex-shrink: 0;
  line-height: 1;
  border: none;
  font-weight: bold;
  will-change: transform, background-color;
}

.tag-pill-remove {
  width: 16px;
  height: 16px;
  background-color: rgba(42, 50, 75, 0.3);
  font-size: 10px;
}

.tag-pill-remove:hover {
  background-color: var(--danger-color);
  color: white;
}

.tag-add-button {
  width: 22px;
  height: 22px;
  background-color: var(--border-color);
  color: var(--text-secondary);
  font-size: 12px;
  opacity: 0.7;
}

.tag-add-button:hover {
  background-color: var(--primary-color);
  color: white;
  opacity: 1;
  transform: scale(1.1);
}

.tags-container:hover .tag-add-button {
  opacity: 1;
}

/* Tag Input and Autocomplete */
.tag-input-inline {
  border: none;
  outline: none;
  background: transparent;
  color: var(--text-primary);
  font-size: var(--font-size-xs);
  font-family: var(--font-family);
  padding: 2px 4px;
  min-width: 60px;
  max-width: 120px;
}

.tag-input-inline::placeholder {
  color: var(--text-muted);
  font-style: italic;
}

.tag-autocomplete {
  position: absolute;
  top: 100%;
  left: 0;
  right: 0;
  background-color: var(--bg-primary);
  border: 1px solid var(--border-color);
  border-radius: var(--border-radius);
  box-shadow: var(--box-shadow-lg);
  z-index: 1000;
  max-height: 120px;
  overflow-y: auto;
  margin-top: 2px;
}

.tag-autocomplete-item {
  padding: var(--spacing-xs) var(--spacing-sm);
  cursor: pointer;
  font-size: var(--font-size-xs);
  transition: background-color var(--transition-base);
  border-bottom: 1px solid var(--border-color);
}

.tag-autocomplete-item:last-child {
  border-bottom: none;
}

.tag-autocomplete-item:hover,
.tag-autocomplete-item.highlighted {
  background-color: var(--bg-secondary);
}

.tag-empty-state {
  color: var(--text-muted);
  font-style: italic;
  font-size: var(--font-size-xs);
  padding: var(--spacing-xs);
}

/* Enhanced Project Filters - Modern & Compact */
.project-filters {
  background-color: var(--bg-secondary);
  border: 1px solid var(--border-color);
  border-radius: var(--border-radius);
  margin-bottom: var(--spacing-xl);
  overflow: hidden;
  box-shadow: var(--box-shadow);
}

/* Main Filter Bar */
.filter-main-bar {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: var(--spacing-md);
  background-color: var(--bg-primary);
  border-bottom: 1px solid var(--border-color);
  gap: var(--spacing-md);
}

.filter-search-group {
  flex: 1;
  max-width: 400px;
}

.search-input-wrapper {
  position: relative;
  display: flex;
  align-items: center;
}

.filter-search-input {
  width: 100%;
  padding: var(--spacing-sm) var(--spacing-md);
  border: 1px solid var(--border-color);
  border-radius: var(--border-radius);
  font-size: var(--font-size-base);
  background-color: var(--bg-primary);
  transition: border-color var(--transition-base),
    box-shadow var(--transition-base);
}

.filter-search-input:focus {
  outline: none;
  border-color: var(--primary-color);
  box-shadow: 0 0 0 2px rgba(42, 50, 75, 0.1);
}

.filter-actions-group {
  display: flex;
  align-items: center;
  gap: var(--spacing-sm);
}

.filter-badge {
  display: inline-flex;
  align-items: center;
  padding: var(--spacing-xs) var(--spacing-sm);
  background-color: var(--accent-color);
  color: var(--space-cadet);
  border-radius: calc(var(--border-radius) * 0.75);
  font-size: var(--font-size-xs);
  font-weight: 500;
  white-space: nowrap;
}

.filter-expand-btn {
  display: inline-flex;
  align-items: center;
  gap: var(--spacing-xs);
  padding: var(--spacing-sm) var(--spacing-md);
  background-color: transparent;
  border: 1px solid var(--border-color);
  border-radius: var(--border-radius);
  color: var(--text-primary);
  font-size: var(--font-size-sm);
  font-weight: 500;
  cursor: pointer;
  transition: all var(--transition-base);
}

.filter-expand-btn:hover {
  background-color: var(--bg-secondary);
  border-color: var(--primary-color);
}

.expand-icon {
  width: 16px;
  height: 16px;
  transition: transform var(--transition-base);
}

.expand-icon.expanded {
  transform: rotate(180deg);
}

.filter-clear-btn {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  width: 32px;
  height: 32px;
  background-color: var(--danger-color);
  border: none;
  border-radius: var(--border-radius);
  color: white;
  cursor: pointer;
  transition: all var(--transition-base);
}

.filter-clear-btn:hover {
  background-color: var(--danger-hover);
  transform: scale(1.05);
}

.filter-clear-btn svg {
  width: 16px;
  height: 16px;
}

/* Expanded Filter Panel - Compact Design */
.filter-expanded-panel {
  background-color: var(--bg-primary);
  border-top: 1px solid var(--border-color);
  animation: slideDown 0.25s ease-out;
  will-change: opacity, transform;
  padding: var(--spacing-sm) var(--spacing-md);
}

@keyframes slideDown {
  from {
    opacity: 0;
    transform: translateY(-8px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* Unified Tag Management Block */
.tag-management-section {
  background-color: var(--bg-secondary);
  border: 1px solid var(--border-color);
  border-radius: var(--border-radius);
  padding: var(--spacing-sm) var(--spacing-md);
}

.tag-management-header {
  display: flex;
  align-items: center;
  justify-content: space-between;
  margin-bottom: var(--spacing-sm);
  gap: var(--spacing-md);
  flex-wrap: wrap;
}

.tag-management-header h4 {
  margin: 0;
  font-size: var(--font-size-sm);
  font-weight: 600;
  color: var(--text-primary);
  display: flex;
  align-items: center;
  gap: var(--spacing-xs);
}

.tag-management-header h4::before {
  content: "🏷️";
  font-size: var(--font-size-xs);
}

.tag-search-group {
  display: flex;
  align-items: center;
  gap: var(--spacing-xs);
  flex: 1;
  max-width: 300px;
}

/* Old tag controls row styles - now integrated into filter grid */
/*
.tag-controls-row {
  display: grid;
  grid-template-columns: 1fr auto 1fr;
  align-items: center;
  gap: var(--spacing-sm);
  margin-bottom: var(--spacing-sm);
}

.tag-add-group {
  display: flex;
  align-items: center;
  gap: var(--spacing-xs);
}

.tag-add-input {
  flex: 1;
  min-width: 140px;
  padding: var(--spacing-xs) var(--spacing-sm);
  border: 1px solid var(--border-color);
  border-radius: var(--border-radius);
  font-size: var(--font-size-sm);
  background-color: var(--bg-primary);
  transition: border-color var(--transition-base),
    box-shadow var(--transition-base);
}

.tag-add-input:focus {
  outline: none;
  border-color: var(--primary-color);
  box-shadow: 0 0 0 2px rgba(42, 50, 75, 0.1);
}

.tag-add-input:focus + .btn:not(:disabled) {
  border-color: var(--primary-color);
  box-shadow: 0 0 0 1px var(--primary-color);
}

.controls-divider {
  width: 1px;
  height: 24px;
  background-color: var(--border-color);
  margin: 0 var(--spacing-xs);
}

.tag-filter-search-group {
  display: flex;
  align-items: center;
  gap: var(--spacing-xs);
}
*/

.tag-search-input {
  flex: 1;
  min-width: 120px;
  padding: var(--spacing-xs) var(--spacing-sm);
  border: 1px solid var(--border-color);
  border-radius: var(--border-radius);
  font-size: var(--font-size-sm);
  background-color: var(--bg-primary);
  transition: border-color var(--transition-base);
}

.tag-search-input:focus {
  outline: none;
  border-color: var(--primary-color);
  box-shadow: 0 0 0 2px rgba(42, 50, 75, 0.1);
}

.tag-filter-clear {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  width: 28px;
  height: 28px;
  background-color: var(--secondary-color);
  border: none;
  border-radius: var(--border-radius);
  color: white;
  cursor: pointer;
  transition: all var(--transition-base);
  opacity: 0.8;
}

.tag-filter-clear:hover {
  background-color: var(--secondary-hover);
  opacity: 1;
  transform: scale(1.05);
}

.tag-filter-clear svg {
  width: 14px;
  height: 14px;
}

/* Tag Filter Grid - Updated to include create item */
.tag-filter-grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
  gap: var(--spacing-xs);
  margin-top: var(--spacing-sm);
}

.tag-filter-item {
  position: relative;
  display: flex;
  align-items: center;
  gap: var(--spacing-xs);
  padding: var(--spacing-xs) var(--spacing-sm);
  background-color: var(--bg-primary);
  border: 1px solid var(--border-color);
  border-radius: var(--border-radius);
  cursor: pointer;
  transition: all var(--transition-base);
  user-select: none;
  will-change: transform, box-shadow, background-color;
}

.tag-filter-item:hover {
  border-color: var(--primary-color);
  box-shadow: 0 2px 4px rgba(42, 50, 75, 0.1);
  transform: translateY(-1px);
}

.tag-filter-item:disabled {
  opacity: 0.6;
  cursor: not-allowed;
}

/* Hide the actual checkbox completely */
.tag-filter-item input[type="checkbox"] {
  position: absolute;
  opacity: 0;
  width: 0;
  height: 0;
  pointer-events: none;
}

.tag-filter-label {
  flex: 1;
  font-size: var(--font-size-sm);
  font-weight: 500;
  color: var(--text-primary);
  transition: all var(--transition-base);
}

/* Remove the old checkmark element entirely - we'll use background colors instead */
.tag-filter-checkmark {
  display: none;
}

/* Selected state - use background color and text changes */
.tag-filter-item:has(input[type="checkbox"]:checked) {
  background-color: var(--primary-color);
  border-color: var(--primary-color);
  color: white;
}

.tag-filter-item:has(input[type="checkbox"]:checked) .tag-filter-label {
  color: white;
  font-weight: 600;
}

.tag-filter-item:has(input[type="checkbox"]:checked):hover {
  background-color: var(--primary-dark);
  border-color: var(--primary-dark);
  transform: translateY(-1px);
}

/* Fallback for browsers that don't support :has() - using JavaScript-added class */
.tag-filter-item.selected {
  background-color: var(--primary-color);
  border-color: var(--primary-color);
  color: white;
}

.tag-filter-item.selected .tag-filter-label {
  color: white;
  font-weight: 600;
}

.tag-filter-item.selected:hover {
  background-color: var(--primary-dark);
  border-color: var(--primary-dark);
}

/* Add a subtle animation when selecting */
.tag-filter-item {
  animation: none;
}

.tag-filter-item input[type="checkbox"]:checked ~ * {
  animation: pulse-select 0.2s ease-out;
}

@keyframes pulse-select {
  0% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.05);
  }
  100% {
    transform: scale(1);
  }
}

.no-tags-message {
  text-align: center;
  padding: var(--spacing-lg);
  color: var(--text-muted);
  font-style: italic;
  font-size: var(--font-size-sm);
}

/* Error Boundary and Loading States */
.error-boundary {
  background-color: var(--alice-blue);
  border: 1px solid var(--french-gray);
  border-radius: var(--border-radius);
  padding: var(--spacing-lg);
  margin: var(--spacing-lg) 0;
}

.error-boundary h2 {
  color: var(--danger-color);
  margin-top: 0;
}

.error-boundary details {
  margin: var(--spacing-md) 0;
  font-family: monospace;
  font-size: var(--font-size-sm);
}

.retry-button {
  background-color: var(--danger-color);
  color: white;
  border: 1px solid var(--danger-color);
  padding: var(--spacing-sm) var(--spacing-md);
  border-radius: var(--border-radius);
  cursor: pointer;
  transition: background-color var(--transition-base);
}

.retry-button:hover {
  background-color: var(--danger-hover);
}

.loading {
  display: flex;
  align-items: center;
  justify-content: center;
  padding: var(--spacing-xl);
  color: var(--text-muted);
}

.loading::before {
  content: "";
  width: 20px;
  height: 20px;
  border: 2px solid var(--border-color);
  border-top: 2px solid var(--primary-color);
  border-radius: 50%;
  animation: spin 1s linear infinite;
  margin-right: var(--spacing-sm);
}

@keyframes spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

/* Responsive Design */
@media (max-width: 1200px) {
  .app-container {
    max-width: 100%;
    padding: var(--spacing-lg);
  }

  .project-table-container {
    overflow-x: auto;
    -webkit-overflow-scrolling: touch;
  }

  .project-table {
    min-width: 650px;
    table-layout: auto;
  }
}

/* Progressive column hiding for optimal mobile UX */
@media (max-width: 900px) {
  /* Hide BPM, Key, and Status columns first on medium screens */
  .project-table th:nth-child(3),
  .project-table td:nth-child(3),
  .project-table th:nth-child(4),
  .project-table td:nth-child(4),
  .project-table th:nth-child(5),
  .project-table td:nth-child(5) {
    display: none;
  }

  .project-table {
    min-width: 500px;
  }

  .tags-cell {
    min-width: 200px;
  }
}

@media (max-width: 768px) {
  .app-container {
    padding: var(--spacing-md);
  }

  .app-header {
    flex-direction: column;
    gap: var(--spacing-md);
    text-align: center;
  }

  .header-actions {
    width: 100%;
    justify-content: center;
    flex-wrap: wrap;
  }

  .project-table-container {
    overflow-x: auto;
    -webkit-overflow-scrolling: touch;
    border-radius: var(--border-radius);
  }

  .project-table {
    min-width: 450px;
    table-layout: auto;
  }

  .project-table th,
  .project-table td {
    padding: var(--spacing-sm);
    font-size: var(--font-size-sm);
  }

  /* Sticky tags column for all breakpoints */
  .project-table th:last-child,
  .project-table td:last-child {
    position: sticky;
    right: 0;
    background-color: var(--bg-secondary);
    box-shadow: -2px 0 4px rgba(0, 0, 0, 0.05);
    z-index: 11;
  }

  .project-table tbody td:last-child {
    background-color: var(--bg-primary);
  }

  .project-table tbody tr:hover td:last-child {
    background-color: var(--bg-secondary);
  }

  .project-name {
    max-width: 150px;
  }

  .creation-date-cell {
    min-width: 110px;
    font-size: var(--font-size-xs);
  }

  .tags-cell {
    min-width: 180px;
  }

  /* Responsive tag system scaling */
  .tags-container {
    min-height: 28px;
    padding: var(--spacing-xs);
    gap: 2px;
  }

  .tag-pill {
    font-size: 0.7rem;
    padding: 2px 6px;
  }

  .tag-pill-remove {
    width: 15px;
    height: 15px;
    font-size: 9px;
  }

  .tag-add-button {
    width: 20px;
    height: 20px;
    font-size: 11px;
  }

  .tag-input-inline {
    font-size: 0.7rem;
    min-width: 60px;
    max-width: 110px;
  }

  .search-input {
    max-width: 100%;
  }

  .form-input {
    font-size: var(--font-size-sm);
  }

  /* Responsive Filter Design */
  .filter-main-bar {
    flex-direction: column;
    align-items: stretch;
    gap: var(--spacing-sm);
  }

  .filter-search-group {
    max-width: none;
  }

  .filter-actions-group {
    justify-content: space-between;
  }

  .filter-section-header {
    flex-direction: column;
    align-items: stretch;
    gap: var(--spacing-sm);
  }

  .tag-add-group,
  .tag-search-input {
    width: 100%;
  }

  .tag-add-input {
    flex: 1;
  }

  .tag-filter-grid {
    grid-template-columns: 1fr;
  }
}

@media (max-width: 600px) {
  /* Hide creation date column on very small screens */
  .project-table th:nth-child(2),
  .project-table td:nth-child(2) {
    display: none;
  }

  .project-table {
    min-width: 320px;
  }

  .project-name {
    max-width: none;
    min-width: 140px;
  }

  .tags-cell {
    min-width: 150px;
  }

  .tags-container {
    min-height: 26px;
    padding: 2px;
    gap: 2px;
  }

  .tag-pill {
    font-size: 0.65rem;
    padding: 1px 4px;
  }

  .tag-pill-remove {
    width: 14px;
    height: 14px;
    font-size: 8px;
  }

  .tag-add-button {
    width: 18px;
    height: 18px;
    font-size: 10px;
  }

  .tag-input-inline {
    font-size: 0.65rem;
    min-width: 50px;
    max-width: 90px;
  }
}

@media (max-width: 480px) {
  .app-container {
    padding: var(--spacing-sm);
  }

  .project-table {
    min-width: 280px;
  }

  .project-table th,
  .project-table td {
    padding: var(--spacing-xs);
    font-size: var(--font-size-xs);
  }

  /* Enhanced shadow for smallest screens */
  .project-table th:last-child,
  .project-table td:last-child {
    box-shadow: -2px 0 4px rgba(0, 0, 0, 0.1);
  }

  .project-name {
    min-width: 120px;
    font-size: var(--font-size-xs);
  }

  .tags-cell {
    min-width: 130px;
  }

  .tags-container {
    min-height: 24px;
    padding: 1px;
    gap: 1px;
    flex-wrap: wrap;
  }

  .tag-pill {
    font-size: 0.6rem;
    padding: 1px 3px;
    margin: 1px 0;
  }

  .tag-pill-remove {
    width: 12px;
    height: 12px;
    font-size: 8px;
  }

  .tag-add-button {
    width: 16px;
    height: 16px;
    font-size: 9px;
  }

  .tag-input-inline {
    font-size: 0.6rem;
    min-width: 40px;
    max-width: 70px;
    padding: 1px 2px;
  }

  .tag-autocomplete {
    font-size: 0.6rem;
    max-height: 100px;
  }

  .tag-autocomplete-item {
    padding: 2px 4px;
    font-size: 0.6rem;
  }
}

/* Responsive adjustments for tag management */
@media (max-width: 640px) {
  .tag-management-header {
    flex-direction: column;
    align-items: stretch;
    gap: var(--spacing-sm);
  }

  .tag-search-group {
    max-width: none;
  }

  .tag-filter-grid {
    grid-template-columns: 1fr;
  }

  .tag-create-item {
    order: -1; /* Put create field at the top on mobile */
  }
}

/* Tag Create Item - Integrated with filter grid */
.tag-create-item {
  display: flex;
  align-items: center;
  gap: var(--spacing-xs);
  padding: var(--spacing-xs) var(--spacing-sm);
  background-color: var(--bg-primary);
  border: 2px dashed var(--border-color);
  border-radius: var(--border-radius);
  transition: all var(--transition-base);
}

/* Enhanced visual feedback for tag create item */
.tag-create-item:focus-within {
  border-color: var(--primary-color);
  box-shadow: 0 0 0 2px rgba(42, 50, 75, 0.1);
  background-color: var(--bg-primary);
}

.tag-create-item .btn:focus {
  outline: none;
  box-shadow: 0 0 0 2px var(--accent-color);
}

.tag-create-item:hover {
  border-color: var(--accent-color);
  background-color: var(--bg-secondary);
}

.tag-create-input {
  flex: 1;
  border: none;
  outline: none;
  background: transparent;
  padding: var(--spacing-xs) 0;
  font-size: var(--font-size-sm);
  color: var(--text-primary);
  font-family: var(--font-family);
}

.tag-create-input::placeholder {
  color: var(--text-muted);
  font-style: italic;
}

.tag-create-input:disabled {
  opacity: 0.6;
}

.tag-create-item .btn {
  flex-shrink: 0;
}

/* Utility Classes */
.text-center {
  text-align: center;
}
.text-right {
  text-align: right;
}
.text-muted {
  color: var(--text-muted);
}
.text-primary {
  color: var(--accent-color);
}
.text-success {
  color: var(--accent-color);
}
.text-danger {
  color: var(--danger-color);
}

.mb-0 {
  margin-bottom: 0;
}
.mb-1 {
  margin-bottom: var(--spacing-xs);
}
.mb-2 {
  margin-bottom: var(--spacing-sm);
}
.mb-3 {
  margin-bottom: var(--spacing-md);
}
.mb-4 {
  margin-bottom: var(--spacing-lg);
}
.mb-5 {
  margin-bottom: var(--spacing-xl);
}

.d-flex {
  display: flex;
}
.align-items-center {
  align-items: center;
}
.justify-content-between {
  justify-content: space-between;
}
.gap-1 {
  gap: var(--spacing-xs);
}
.gap-2 {
  gap: var(--spacing-sm);
}
.gap-3 {
  gap: var(--spacing-md);
}
